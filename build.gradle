buildscript {
	ext {
		springBootVersion = '1.5.4.RELEASE'
	}
	repositories {
		mavenCentral()
		jcenter()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath 'org.akhikhl.gretty:gretty:+'
		classpath "com.moowork.gradle:gradle-node-plugin:1.2.0"
		
	}
}

apply plugin: "com.moowork.node"
apply plugin: 'java'
apply plugin: 'war'
apply plugin : 'eclipse-wtp'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	compile("org.springframework.boot:spring-boot-devtools")
	compile('org.springframework.boot:spring-boot-starter-aop')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-hateoas')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-validation')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('javax:javaee-web-api:7.0')
	compileOnly "org.projectlombok:lombok:1.16.16"
	runtime('mysql:mysql-connector-java')
	compileOnly('org.projectlombok:lombok')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	
}

node {
	version = "6.9.2"
	download = true
	nodeModulesDir = file("ssms-app")
}

task buildClientDev(type: NpmTask, dependsOn: 'npmInstall'){
  group = 'build'
  description = 'Compile client side folder for development'
  args = ['run','buildDev']
}
task buildClient(type:NpmTask, dependsOn:'npmInstall'){
  group = 'build'
  description = "Compile client side folder for production"
  args = ['run','build']
}
task buildClientWatch(type: NpmTask, dependsOn: 'npmInstall'){
  group = 'application'
  description = "Build and watches the client side assets for rebuilding"
  args = ['run','buildWatch']
}
bootRun.dependsOn(buildClientDev)
jar.dependsOn(buildClient)